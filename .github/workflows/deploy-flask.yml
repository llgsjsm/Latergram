name: Deploy Flask to EC2

on:
  workflow_run:
    workflows: ["Application stack CI Pipeline to Main"]
    types:
      - completed


jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success'}}
    name: Deploy Flask to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check if app-server/ changed
      run: |
        git fetch origin main
        CHANGED=$(git diff --name-only origin/main...HEAD | grep '^app-server/' || true)
        if [ -z "$CHANGED" ]; then
          echo "No app-server changes. Skipping deploy."
          exit 0
        fi
        
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Test SSH Connection to EC2
      run: |
        ssh -o StrictHostKeyChecking=no admin-dev@${{ secrets.EC2_HOST }} "echo 'SSH connection successful'"


    - name: Sync Only Flask App Files to EC2
      run: |
        rsync -az --delete \
          --exclude='.env' \
          --exclude='image.json' \
          --exclude='__pycache__/' \
          -e "ssh -o StrictHostKeyChecking=no" \
          ./app-server/ admin-dev@${{ secrets.EC2_HOST }}:/home/admin-dev/latergram/app-server/

    - name: Rebuild Flask Service on EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: admin-dev
        key: ${{ secrets.EC2_SSH_KEY }}
        # Maybe don't need to rebuild when replacing app-server/
        script: |
          cd /home/admin-dev/latergram
          echo "Rebuilding and restarting Flask container..."
          sudo docker compose -f docker-compose.prod.yml up -d --build --force-recreate flask



